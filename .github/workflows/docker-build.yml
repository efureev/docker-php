name: Build Templater Docker Images

on:
  push:
    branches:
      - '*'
      - '*/*'
      - '**'

jobs:
  generate-dockerfiles:
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.matrix.outputs.value }}

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Generate Dockerfiles
        run: |
          docker run --rm \
              -v ${{ github.workspace }}:${{ github.workspace }} -w ${{ github.workspace }} \
              ghcr.io/bossm8/dockerfile-templater:debug \
                --dockerfile.tpl ${{ github.workspace }}/dockerfile.tpl \
                --dockerfile.tpldir ${{ github.workspace }}/includes \
                --variants.def ${{ github.workspace }}/variants.yml.tmp \
                --variants.cfg ${{ github.workspace }}/variants.cfg.yml \
                --out.dir ${{ github.workspace }}/dockerfiles

      - name: View Dockerfile list
        run: ls -la ${{ github.workspace }}/dockerfiles

      - id: matrix
        run: |
          echo value=$(jq -nc '$ARGS.positional' --args $(find dockerfiles -type f)) >> $GITHUB_OUTPUT

      - run: |
          echo "${{ steps.matrix.outputs.value }}"

      - name: Upload Generated Dockerfiles
        uses: actions/upload-artifact@v4
        with:
          name: dockerfiles
          path: dockerfiles

  build-dockerimages:
    runs-on: ubuntu-latest
    needs: generate-dockerfiles
    strategy:
      matrix:
        value: ${{fromJSON(needs.generate-dockerfiles.outputs.matrix)}}

    permissions:
      contents: read
      packages: write

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - uses: actions/checkout@v4
      - name: Download Generated Dockerfiles
        uses: actions/download-artifact@v4
        with:
          name: dockerfiles
          path: dockerfiles

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a Tag
        id: create-tag
        run: echo tag=$(echo ${{ matrix.value }} | sed -r 's/^(.+).php.(.*)$/\2/') >> $GITHUB_OUTPUT

      - name: View Tag
        run: echo ${{ steps.create-tag.outputs.tag }}

      - name: View Repo
        run: |
          echo ${{ env.REGISTRY }}
          echo ${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.value }}
          push: true
          #          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          tags: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.create-tag.outputs.tag }}"

      - uses: geekyeggo/delete-artifact@v5
        with:
          name: dockerfiles

      - name: Summary
        run: echo "- PHP:${{ steps.create-tag.outputs.tag }} :rocket:" >> $GITHUB_STEP_SUMMARY